{"ast":null,"code":"var _jsxFileName = \"/Users/fredz/Downloads/code/reactT/task-manager-frontend/src/components/TaskList.js\",\n  _s = $RefreshSig$();\n// TaskList.js\n\nimport React, { useState, useEffect } from 'react';\nimport TaskItem from './TaskItem';\nimport AddTask from './AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState('');\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await getTasks(user.id);\n        setTasks(response.data);\n      } catch (err) {\n        setError('Failed to load tasks');\n      }\n    };\n    fetchTasks();\n  }, [user.id]);\n  const handleTaskUpdate = async () => {\n    // 重新加载任务\n    const response = await getTasks(user.id);\n    setTasks(response.data);\n  };\n  const handleTaskDelete = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n  const handleTaskAdded = async () => {\n    // 重新加载任务\n    const response = await getTasks(user.id);\n    setTasks(response.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        onTaskUpdate: handleTaskUpdate,\n        onTaskDelete: handleTaskDelete\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      userId: user.id,\n      onTaskAdded: handleTaskAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"mUY3UIxV7kMIC0enHxY7PEoVTBU=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","TaskItem","AddTask","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","error","setError","user","JSON","parse","localStorage","getItem","fetchTasks","response","getTasks","id","data","err","handleTaskUpdate","handleTaskDelete","taskId","filter","task","handleTaskAdded","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onTaskUpdate","onTaskDelete","userId","onTaskAdded","_c","$RefreshReg$"],"sources":["/Users/fredz/Downloads/code/reactT/task-manager-frontend/src/components/TaskList.js"],"sourcesContent":["// TaskList.js\n\nimport React, { useState, useEffect } from 'react';\nimport TaskItem from './TaskItem';\nimport AddTask from './AddTask';\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState('');\n\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await getTasks(user.id);\n        setTasks(response.data);\n      } catch (err) {\n        setError('Failed to load tasks');\n      }\n    };\n    fetchTasks();\n  }, [user.id]);\n\n  const handleTaskUpdate = async () => {\n    // 重新加载任务\n    const response = await getTasks(user.id);\n    setTasks(response.data);\n  };\n\n  const handleTaskDelete = (taskId) => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n\n  const handleTaskAdded = async () => {\n    // 重新加载任务\n    const response = await getTasks(user.id);\n    setTasks(response.data);\n  };\n\n  return (\n    <div>\n      <h2>Task List</h2>\n      {error && <p>{error}</p>}\n      <ul>\n        {tasks.map(task => (\n          <TaskItem\n            key={task.id}\n            task={task}\n            onTaskUpdate={handleTaskUpdate}\n            onTaskDelete={handleTaskDelete}\n          />\n        ))}\n      </ul>\n      <AddTask userId={user.id} onTaskAdded={handleTaskAdded} />\n    </div>\n  );\n};\n\nexport default TaskList;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAErDf,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,QAAQ,CAACP,IAAI,CAACQ,EAAE,CAAC;QACxCX,QAAQ,CAACS,QAAQ,CAACG,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZX,QAAQ,CAAC,sBAAsB,CAAC;MAClC;IACF,CAAC;IACDM,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACL,IAAI,CAACQ,EAAE,CAAC,CAAC;EAEb,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC;IACA,MAAML,QAAQ,GAAG,MAAMC,QAAQ,CAACP,IAAI,CAACQ,EAAE,CAAC;IACxCX,QAAQ,CAACS,QAAQ,CAACG,IAAI,CAAC;EACzB,CAAC;EAED,MAAMG,gBAAgB,GAAIC,MAAM,IAAK;IACnChB,QAAQ,CAACD,KAAK,CAACkB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKK,MAAM,CAAC,CAAC;EACpD,CAAC;EAED,MAAMG,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC;IACA,MAAMV,QAAQ,GAAG,MAAMC,QAAQ,CAACP,IAAI,CAACQ,EAAE,CAAC;IACxCX,QAAQ,CAACS,QAAQ,CAACG,IAAI,CAAC;EACzB,CAAC;EAED,oBACEhB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBvB,KAAK,iBAAIL,OAAA;MAAAwB,QAAA,EAAInB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB5B,OAAA;MAAAwB,QAAA,EACGrB,KAAK,CAAC0B,GAAG,CAACP,IAAI,iBACbtB,OAAA,CAACH,QAAQ;QAEPyB,IAAI,EAAEA,IAAK;QACXQ,YAAY,EAAEZ,gBAAiB;QAC/Ba,YAAY,EAAEZ;MAAiB,GAH1BG,IAAI,CAACP,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACL5B,OAAA,CAACF,OAAO;MAACkC,MAAM,EAAEzB,IAAI,CAACQ,EAAG;MAACkB,WAAW,EAAEV;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAnDID,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAqDd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}