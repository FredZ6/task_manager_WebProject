{"ast":null,"code":"var _jsxFileName = \"/Users/fredz/Downloads/code/reactT/task-manager-frontend/src/components/TaskList.js\",\n  _s = $RefreshSig$();\n// TaskList.js\n\nimport React, { useState, useEffect } from 'react';\nimport { getTasks } from '../services/api';\nimport TaskItem from './TaskItem';\nimport AddTask from './AddTask';\nimport { Container, Typography, List, Box, AppBar, Toolbar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState('');\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await getTasks(user.id);\n        setTasks(response.data);\n      } catch (err) {\n        setError('Failed to load tasks');\n      }\n    };\n    fetchTasks();\n  }, [user.id]);\n  const handleTaskUpdate = async () => {\n    const response = await getTasks(user.id);\n    setTasks(response.data);\n  };\n  const handleTaskDelete = async () => {\n    const response = await getTasks(user.id);\n    setTasks(response.data);\n  };\n  const handleTaskAdded = async () => {\n    const response = await getTasks(user.id);\n    setTasks(response.data);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1\n          },\n          children: [\"Welcome, \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        variant: \"body2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n        userId: user.id,\n        onTaskAdded: handleTaskAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n          task: task,\n          onTaskUpdate: handleTaskUpdate,\n          onTaskDelete: handleTaskDelete\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"mUY3UIxV7kMIC0enHxY7PEoVTBU=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","getTasks","TaskItem","AddTask","Container","Typography","List","Box","AppBar","Toolbar","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","error","setError","user","JSON","parse","localStorage","getItem","fetchTasks","response","id","data","err","handleTaskUpdate","handleTaskDelete","handleTaskAdded","component","maxWidth","children","position","variant","sx","flexGrow","username","fileName","_jsxFileName","lineNumber","columnNumber","mt","mb","gutterBottom","color","userId","onTaskAdded","map","task","onTaskUpdate","onTaskDelete","_c","$RefreshReg$"],"sources":["/Users/fredz/Downloads/code/reactT/task-manager-frontend/src/components/TaskList.js"],"sourcesContent":["// TaskList.js\n\nimport React, { useState, useEffect } from 'react';\nimport { getTasks } from '../services/api';\nimport TaskItem from './TaskItem';\nimport AddTask from './AddTask';\nimport { Container, Typography, List, Box, AppBar, Toolbar } from '@mui/material';\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState('');\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await getTasks(user.id);\n        setTasks(response.data);\n      } catch (err) {\n        setError('Failed to load tasks');\n      }\n    };\n    fetchTasks();\n  }, [user.id]);\n\n  const handleTaskUpdate = async () => {\n    const response = await getTasks(user.id);\n    setTasks(response.data);\n  };\n\n  const handleTaskDelete = async () => {\n    const response = await getTasks(user.id);\n    setTasks(response.data);\n  };\n\n  const handleTaskAdded = async () => {\n    const response = await getTasks(user.id);\n    setTasks(response.data);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      {/* 添加顶部导航栏，显示用户名 */}\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n            Welcome, {user.username}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      {/* 任务列表 */}\n      <Box sx={{ mt: 4, mb: 2 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Task List\n        </Typography>\n        {error && (\n          <Typography color=\"error\" variant=\"body2\">\n            {error}\n          </Typography>\n        )}\n        <AddTask userId={user.id} onTaskAdded={handleTaskAdded} />\n        <List>\n          {tasks.map((task) => (\n            <TaskItem\n              key={task.id}\n              task={task}\n              onTaskUpdate={handleTaskUpdate}\n              onTaskDelete={handleTaskDelete}\n            />\n          ))}\n        </List>\n      </Box>\n    </Container>\n  );\n};\n\nexport default TaskList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}